services:
  web:
    build: .
    ports:
      - "80:3000"
    environment:
      - NODE_ENV=${NODE_ENV}
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  sonarqube:
    image: sonarqube:latest
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_WEB_JAVAADDITIONALOPTS=-Dsonar.security.realm=sonar -Dsonar.forceAuthentication=false
      - SONARQUBE_ADMIN_PASSWORD=${SONARQUBE_ADMIN_PASSWORD}
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - app-network
    depends_on:
      - web

volumes:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:

networks:
  app-network:
    driver: bridge